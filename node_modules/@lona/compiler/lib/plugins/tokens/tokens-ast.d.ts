export declare type FontWeight = '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';
export interface ColorValue {
    css: string;
}
export interface TextStyleValue {
    fontName?: string;
    fontFamily?: string;
    fontWeight: FontWeight;
    fontSize?: number;
    lineHeight?: number;
    letterSpacing?: number;
    color?: ColorValue;
}
export interface ShadowValue {
    x: number;
    y: number;
    blur: number;
    radius: number;
    color: ColorValue;
}
export declare type ColorTokenValue = {
    type: 'color';
    value: ColorValue;
};
export declare type ShadowTokenValue = {
    type: 'shadow';
    value: ShadowValue;
};
export declare type TextStyleTokenValue = {
    type: 'textStyle';
    value: TextStyleValue;
};
export declare type TokenValue = ColorTokenValue | ShadowTokenValue | TextStyleTokenValue;
export declare type ColorToken = {
    qualifiedName: Array<string>;
    value: ColorTokenValue;
};
export declare type ShadowToken = {
    qualifiedName: Array<string>;
    value: ShadowTokenValue;
};
export declare type TextStyleToken = {
    qualifiedName: Array<string>;
    value: TextStyleTokenValue;
};
export declare type Token = {
    qualifiedName: Array<string>;
    value: TextStyleTokenValue | ShadowTokenValue | ColorTokenValue;
};
export declare type ConvertedFileContents = {
    type: 'flatTokens';
    value: Array<Token>;
};
export interface ConvertedFile {
    inputPath: string;
    outputPath: string;
    name: string;
    contents: ConvertedFileContents;
}
export interface ConvertedWorkspace {
    files: Array<ConvertedFile>;
    flatTokensSchemaVersion: string;
}
