export declare type Reference = 'URL' | 'Color' | string;
export declare type Named = {
    name: 'Named';
    alias: string;
    of: UserType;
};
export declare type ResolvedEnum = {
    name: 'Enum' | 'Variant';
    cases: {
        tag: string;
        ltype: UserType;
    }[];
};
export declare type Enum = {
    name: 'Enum' | 'Variant';
    cases?: (string | undefined)[];
    case?: string;
    type?: UserType;
};
export declare type Function = {
    name: 'Function';
    parameters?: {
        label: string;
        ltype: UserType;
    }[];
    returnType?: UserType;
};
export declare type Array = {
    name: 'Array';
    of: UserType;
};
export declare type UserType = Reference | Named | Enum | Function | Array;
export declare type TypesFile = {
    types: UserType[];
};
export declare function dereference(x: Reference): Reference | Named;
export declare function resolveEnum(x: Enum): ResolvedEnum;
